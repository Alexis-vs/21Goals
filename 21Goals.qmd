---
title: "Black Jack Ligue 1"
format:
  html:
    page-layout: full
    theme: default
    css: styles.css
execute:
  echo: false
  message: false
  warning: false
---

```{r}
library(dplyr)
library(highcharter)
library(crosstalk)
library(reactable)
library(htmltools)
library(rvest)
library(xlsx)
```

```{r}
data <- xlsx::read.xlsx("data.xlsx", sheetIndex = 1)
```

```{r}
# testing adding an image for the future
img = "https://www.footballdatabase.eu/images/photos/players/a_247/247255.jpg"
```

```{r}
# currently simulates n goals, but wip to collect goals
data$goals = rnorm(5*4, mean = 5, sd = 2) %>% round()

df_group_by <- data %>%
  group_by(player) %>%
  summarise(sum_goals = sum(goals))
```

::::: {.columns .responsive-columns}
::: {.column width="70%"}
```{r}

highchart() %>%
  hc_chart(polar = TRUE, type = "line") %>%
  hc_xAxis(categories = df_group_by$player,
           tickmarkPlacement = "on",
           lineWidth = 0) %>%
  hc_yAxis(gridLineInterpolation = "polygon",
           lineWidth = 0,
           min = 0,
           max = 30,
           tickPositions = c(0, 21, 30),
           gridLineColor = "transparent",
           plotBands = list(
             list(from = 21,
                  to = 30,
                  color = "rgba(255, 0, 0, 0.2)",
                  label = list(text = "Au-dessus de 21",
                               style = list(color = "red")))),
           plotLines = list(
             list(value = 21,
                  color = "#B00020",
                  width = 2,
                  dashStyle = "Solid",
                  label = list(text = "Seuil : 21",
                               style = list(color = "#B00020",
                                            fontWeight = "bold"),
                               align = "right"),
                  zIndex = 5))) %>%
  hc_series(list(name = "Goals",
                 data = df_group_by$sum_goals,
                 pointPlacement = "on")) %>%
  hc_legend(enabled = FALSE) %>%
  hc_tooltip(shared = TRUE,
             pointFormat = "<span style='color:{series.color}'>{series.name}: <b>{point.y}</b><br/>")


```
:::

::: {.column width="30%"}
```{r}

shared_data <- SharedData$new(data,
                              key = ~row.names(data),
                              group = "players_group")

filter_select("player_selector",
              "Select a player :",
              shared_data,
              ~player,
              multiple = FALSE)

# Bar chart for reactable
bar_chart <- function(label, width = "100%", height = "1rem", fill = "#00bfc4", background = NULL){
  bar <- div(style = list(background = fill, width = width, height = height))
  chart <- div(style = list(flexGrow = 1, marginLeft = "0.5rem", background = background), bar)
  div(style = list(display = "flex", alignItems = "center"), label, chart)
}

# Interactive data table
reactable(
  shared_data,
  columns = list(
    player = colDef(name = "Joueur", style = list(fontWeight = "bold"), show = FALSE),
    football_player = colDef(name = "Football Player", align = "left", cell = function(value){
      image <- img(src = img, style = "height: 24px;", alt = value)
      tagList(
        div(style = "display: inline-block; width: 45px", image),
        value
      )
    }),
    goals = colDef(name = "Goals", cell = function(value){
      width <- paste0(value / max(data$goals) * 100, "%")
      bar_chart(value, width = width)
    })
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  defaultPageSize = 4,
  style = list(fontFamily = "Arial", fontSize = "15px")
)

```
:::

To learn more about this game, see <https://www.21goals.app/>. Currently WIP, example with 2024-2025 season.
:::::
