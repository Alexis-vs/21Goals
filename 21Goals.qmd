---
title: "Black Jack Ligue 1"
format:
  html:
    page-layout: full
    theme: default
    css: styles.css
execute:
  echo: false
  message: false
  warning: false
---

```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(dplyr)
library(highcharter)
library(crosstalk)
library(reactable)
library(htmltools)
library(rvest)
library(xlsx)
library(purrr)
library(stringr)
```


```{r}
data <- xlsx::read.xlsx("data.xlsx", sheetIndex = 1)
```


```{r functions}
get_goal_link <- function(player_link){
  
  split_player_link = player_link %>% strsplit("/")
  base_link = paste(split_player_link[[1]][1:6],collapse = "/")
  goal_link = paste(base_link, "goallogs/dom_lg", paste0(split_player_link[[1]][7], "-Goal-Log"), sep = "/")
  
  return(goal_link)
  
}

get_dom_goal_link <- function(player_link){
  
  split_player_link = player_link %>% strsplit("/")
  base_link = paste(split_player_link[[1]][1:6],collapse = "/")
  goal_link = paste(base_link, "dom_lg", paste0(split_player_link[[1]][7], "-Domestic-League-Stats"), sep = "/")
  
  return(goal_link)
  
}

goal_informations <- function(page){
  
  df = page %>%
    html_element("#goallogs_goals") %>%
    html_table() %>%
    select(Rk, Date, xG) %>% ### rajouter 'Round' pour un graph cumulatif / changer sortie
    filter(!is.na(Rk)) %>%
    mutate(Date = as.Date(Date)) %>%
    filter(Date > "2024-08-01") %>% ## update date for next season
    summarise(n_goals = n(),
              sum_xG = sum(xG))
  
  return(df)
  
}

get_player_stats <- function(page, season, country){
  
  table = page %>%
    html_element("#div_stats_standard_dom_lg") %>%
    html_table(header = TRUE)
  
  table_colnames = (table %>% as.matrix())[1,1:22]
  df = (table %>% as.matrix())[-1,1:22] %>% as.data.frame()
  colnames(df) = table_colnames
  
  keep_vars = c("MP", "Min", "Gls", "PK", "PKatt", "xG")
  
  df = df %>%
    filter(Season == season & grepl(country,Country)) %>%
    select(all_of(keep_vars)) %>%
    mutate(Min = str_replace(Min, ",", "")) %>%
    mutate(across(all_of(keep_vars), as.numeric))
  
  if(nrow(df) == 0){
    df <- as.data.frame(matrix(0, nrow = 1, ncol = length(keep_vars)))
    colnames(df) <- keep_vars
  }
  
  return(df)
  
}

get_img_player <- function(page){
  
  img = page %>%
    html_elements(".media-item img") %>% 
    html_attr("src")
  
  if(is_empty(img)){img <- "https://assets-fr.imgfoot.com/mbappe-chute.jpg"}
  
  return(img)
  
}

get_player_informations <- function(goal_link, season){
  
  page <- read_html(goal_link)
  
  img <- get_img_player(page)
  df_goals <- get_player_stats(page, season = season, country = "FRA") %>%
    mutate(img = img,
           goal_link = goal_link)
  
  Sys.sleep(12)
  return(df_goals)
  
}

```

```{r}
data <- data %>%
  rowwise() %>%
  mutate(goal_link = get_dom_goal_link(link)) %>%
  ungroup()

df_informations <- lapply(unique(data$goal_link), get_player_informations, season = "2024-2025")
df_informations <- do.call("rbind", df_informations)

data <- data %>%
  left_join(df_informations, by = "goal_link")
```


::::: {.columns .responsive-columns}
::: {.column width="70%"}
```{r radar_chart}

df_group_by <- data %>%
  group_by(player) %>%
  summarise(sum_goals = sum(Gls, na.rm = TRUE))

highchart() %>%
  hc_chart(polar = TRUE, type = "line") %>%
  hc_xAxis(categories = df_group_by$player,
           tickmarkPlacement = "on",
           lineWidth = 0) %>%
  hc_yAxis(gridLineInterpolation = "polygon",
           lineWidth = 0,
           min = 0,
           max = 30,
           tickPositions = c(0, 21, 30),
           gridLineColor = "transparent",
           plotBands = list(
             list(from = 21,
                  to = 30,
                  color = "rgba(255, 0, 0, 0.2)",
                  label = list(text = "Au-dessus de 21",
                               style = list(color = "red")))),
           plotLines = list(
             list(value = 21,
                  color = "#B00020",
                  width = 2,
                  dashStyle = "Solid",
                  label = list(text = "Seuil : 21",
                               style = list(color = "#B00020",
                                            fontWeight = "bold"),
                               align = "right"),
                  zIndex = 5))) %>%
  hc_series(list(name = "Goals",
                 data = df_group_by$sum_goals,
                 pointPlacement = "on")) %>%
  hc_legend(enabled = FALSE) %>%
  hc_tooltip(shared = TRUE,
             pointFormat = "<span style='color:{series.color}'>{series.name}: <b>{point.y}</b><br/>")


```
:::

::: {.column width="30%"}
```{r table}
shared_data <- SharedData$new(data,
                              key = ~row.names(data),
                              group = "players_group")

filter_select("player_selector",
              "Select a player :",
              shared_data,
              ~player,
              multiple = FALSE)

# Bar chart for reactable
bar_chart <- function(label, width = "100%", height = "1rem", fill = "#00bfc4", background = NULL){
  bar <- div(style = list(background = fill, width = width, height = height))
  chart <- div(style = list(flexGrow = 1, marginLeft = "0.5rem", background = background), bar)
  div(style = list(display = "flex", alignItems = "center"), label, chart)
}


# Interactive data table
reactable(
  shared_data,
  columns = list(
    player = colDef(name = "Joueur", style = list(fontWeight = "bold"), show = FALSE),
    link = colDef(show = FALSE),
    img = colDef(show = FALSE),
    goal_link = colDef(show = FALSE),
    football_player = colDef(name = "Football Player", align = "left", cell = function(value, index){
      image <- img(src = data$img[index], style = "height: 24px;", alt = value)
      tagList(
        div(style = "display: inline-block; width: 45px", image),
        value
      )
    }),
    Gls = colDef(name = "Goals", cell = function(value){
      width <- paste0(value / max(data$Gls) * 100, "%")
      bar_chart(value, width = width)
    }),
    MP = colDef(name = "Matches Played"),
    Min = colDef(show = TRUE),
    xG = colDef(name = "Sum xG"),
    PK = colDef(name = "Penalty"),
    PKatt = colDef(name = "Penaltys Attempted")
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  defaultPageSize = 4,
  style = list(fontFamily = "Arial", fontSize = "15px")
)

```
:::

To learn more about this game, see <https://www.21goals.app/>. Currently WIP, example with 2024-2025 season.
:::::
